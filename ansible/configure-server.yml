---
- name: "Install dependencies"
  hosts: all
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
  pre_tasks:
    - name: "wait 300 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 300
      # Your code here

    - name: "install python for Ansible."
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python-minimal)
      changed_when: True
      # Your code here
    - name: "Install 'unzip'"
      apt:
        name: [ "unzip" ]
        state: latest
        update_cache: yes

  roles:
    - install-awscli
    - install-kubectl

- name: "Authenticate AWS CLI with AWS"
  hosts: all
  user: ubuntu
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    - AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    - AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
  tasks:
    - name: Set the aws_access_key_id
      shell: "aws configure set aws_access_key_id {{ AWS_ACCESS_KEY_ID }}"
    - name: Set the aws_secret_access_key
      shell: "aws configure set aws_secret_access_key {{ AWS_SECRET_ACCESS_KEY }}"
    - name: Set the default.region
      shell: "aws configure set default.region {{ AWS_DEFAULT_REGION }}"

- name: "Fetch kubectl config"
  hosts: all
  user: ubuntu
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
    - ENVIRONMENT_NAME: "{{ lookup('env', 'ENVIRONMENT_NAME') }}"
    - CIRCLE_WORKFLOW_ID: "{{ lookup('env', 'CIRCLE_WORKFLOW_ID') }}"
    - CIRCLE_WORKFLOW_ID_SHORT: "{{ CIRCLE_WORKFLOW_ID[:7] }}"
  pre_tasks:
    - name: Create a kubeconfig file for the cluster
      shell: "aws eks update-kubeconfig --region {{ AWS_DEFAULT_REGION }} --name {{ ENVIRONMENT_NAME }}-EKSCluster-{{ CIRCLE_WORKFLOW_ID_SHORT }}"
