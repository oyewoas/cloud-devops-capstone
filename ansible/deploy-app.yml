- name: "Authenticate AWS CLI with AWS"
  hosts: all
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    - AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    - AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
  tasks:
    - name: Set the aws_access_key_id
      shell: "aws configure set aws_access_key_id {{ AWS_ACCESS_KEY_ID }}"
    - name: Set the aws_secret_access_key
      shell: "aws configure set aws_secret_access_key {{ AWS_SECRET_ACCESS_KEY }}"
    - name: Set the default.region
      shell: "aws configure set default.region {{ AWS_DEFAULT_REGION }}"

- name: Deploy latest app
  hosts: all
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - kubectl_path: /usr/local/bin/kubectl
    - ENVIRONMENT_NAME: "{{ lookup('env', 'ENVIRONMENT_NAME') }}"
    - CIRCLE_WORKFLOW_ID: "{{ lookup('env', 'CIRCLE_WORKFLOW_ID') }}"
    - CIRCLE_WORKFLOW_ID_SHORT: "{{ CIRCLE_WORKFLOW_ID[:7] }}"
  tasks:
    - name: Update the deployment to run the latest Build
      shell: "{{ kubectl_path }} set image deployment/{{ ENVIRONMENT_NAME }}-deployment {{ ENVIRONMENT_NAME }}-app=oyewoas/{{ ENVIRONMENT_NAME }}:{{ CIRCLE_WORKFLOW_ID_SHORT }} --kubeconfig=/home/ubuntu/.kube/config"
      args:
        chdir: "/home/ubuntu"

    - name: Check if deployment is successful
      shell: "{{ kubectl_path }} rollout status deployment/{{ ENVIRONMENT_NAME }}-deployment --kubeconfig=/home/ubuntu/.kube/config"
      args:
        chdir: "/home/ubuntu"

